;; -*- coding: utf-8-unix -*-
;; Automatically written history of CIDER REPL session
;; Edit at your own risk

("(require '[clojure.main :as main])
    (main/repl :caught (fn [_] (println \"Broken! HaHa!\")))" "(main/repl :caught (fn [_] (println \"Broken! HaHa!\")))" "(foo 24)" "(main/repl :caught (fn [_] (println \"Broken! HaHa!\")))" "(require '[clojure.main :as main])" "(-main)" "(main)" "(apply-migration)" "(create-migration \"add-capability-column-support-monitor\")" "(apply-migration)" "(create-migration \"add-column-to-support-monitor\")" "(apply-migration)" "(rollback-migration)" "(apply-migration)" "(create-migration \"create-gitlab-issues-control-table\")" "(apply-migration)" "(rollback-migration)" "(create-migration \"add-unique-index-to-support-monitor-table\")" "(apply-migration)" "(rollback-migration)" "(apply-migration)" "(rollback-migration)" "(apply-migration)" "(rollback-migration)" "(apply-migration)" "(rollback-migration)" "(apply-migration)" "(create-migration \"create-support-monitoring-table\")" "(apply-migration)" "(create-migration \"add-column-capability-in-legacy\")" "(apply-migration)" "(create-migration \"add-produ-cols-in-legacy\")" "(apply-migration)" "(create-migration \"add-column-language-in-legacy\")" "(apply-migration)" "(create-migration \"add-updated-column-to-legacy\")" "(apply-migration)" "(in-ns 'espec.migrations)" "(apply-migration)" "(in-ns 'espec.migrations)" "(apply-migration)" "(create-migration \"add-fields-legacy-table\")" "(in-ns 'espec.migrations)" "(migrar)" "(in-ns 'pagamentos.migrations)" "(migrar)" "(criar-migracao \"primary-keys-cadastro\")" "(in-ns 'pagamentos.migrations)" "(load 'pagamentos.migrations)" "(in-ns 'clojure.core)" "(in-ns 'clojure.cre)" "load" "(load 'pagamentos.migrations)" "(criar-migracao \"primary-keys-cadastro\")" "(in-ns 'pagamentos.migrations)" "(migrar)" "(in-ns 'pagamentos.migrations)" "(migrar)" "(criar-migracao \"cadastro-operacoes\")" "config" "(in-ns 'pagamentos.migrations)" "ls" "(in-ns 'pagamentos.migrations)" "app" "(in-ns 'pagamentos.handler)" "criar-migracao" "config" "(in-ns 'pagamentos.migrations)")